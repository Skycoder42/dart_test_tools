on:
  workflow_call:
    inputs:
      dartSdkVersion:
        type: string
        required: false
        default: stable
        description: The Dart-SDK version. Passed as "sdk" to "dart-lang/setup-dart".
      withSubmodules:
        type: boolean
        required: false
        default: false
        description: Specify if submodules should be initialized or not.
      artifactDependencies:
        type: string
        required: false
        default: ""
        description: A space-separated list of package names that should be downloaded from the artifacts and overwritten for the workflow. The packages should be space separated and placed in a single line. You can use the YAML ">-" for that.
      workingDirectory:
        type: string
        required: false
        default: .
        description: The root directory of the dart package to build and test.
      buildDependencies:
        type: string
        required: false
        description: A spaces separated list of other packages within this workspace that make use of build_runner and need to be built before this package.
      buildRunner:
        type: boolean
        required: false
        default: false
        description: Specify whether build_runner is used in the project (defaults to false).
      buildRunnerArgs:
        type: string
        required: false
        description: Optional additional arguments to be passed to the build runner.
jobs:
  package:
    name: Create dart package artifact
    runs-on: ubuntu-latest
    steps:
      - name: Install Dart-SDK (${{ inputs.dartSdkVersion }})
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ inputs.dartSdkVersion }}
      - name: Install tools
        uses: Skycoder42/dart_test_tools/.github/actions/install-tools@main
        with:
          withDartTestTools: "false"
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          submodules: ${{ inputs.withSubmodules }}
      - name: Download artifacts
        if: inputs.artifactDependencies != ''
        uses: actions/download-artifact@v4
        with:
          pattern: package-*
          path: ${{ runner.temp }}/.artifacts
      - name: Create pubspec_overrides.yaml for artifact packages
        if: inputs.artifactDependencies != ''
        run: |
          set -eo pipefail
          if [[ ! -f pubspec_overrides.yaml ]]; then
            yq '{"dependency_overrides": .dependency_overrides}' pubspec.yaml > pubspec_overrides.yaml
          fi
          for package in ${{ inputs.artifactDependencies }}; do
            yq -i ".dependency_overrides.$package.path=\"${{ runner.temp }}/.artifacts/package-$package\"" pubspec_overrides.yaml
          done
        working-directory: ${{ inputs.workingDirectory }}
        shell: bash
      - name: Restore dart packages
        run: dart pub get
        working-directory: ${{ inputs.workingDirectory }}
      - name: Run build_runner for workspace dependencies
        if: inputs.buildDependencies != ''
        run: |
          set -euo pipefail
          for package in ${{ inputs.buildDependencies }}; do
            path=$(
              dart pub workspace list --json \
                | jq -r \
                  --arg package "$package" \
                  '.packages[] | select(.name == $package) | .path'
            )
            cd "$path"
            dart run build_runner build --delete-conflicting-outputs
          done
        working-directory: ${{ inputs.workingDirectory }}
      - name: Create build files
        if: inputs.buildRunner
        run: dart run build_runner build ${{ inputs.buildRunnerArgs }}
        working-directory: ${{ inputs.workingDirectory }}
      - id: get-package-name
        name: Get package name for artifact upload
        run: echo "package-name=$(yq .name pubspec.yaml)" >> $GITHUB_OUTPUT
        working-directory: ${{ inputs.workingDirectory }}
      - name: Upload compiled binaries artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-${{ steps.get-package-name.outputs.package-name }}
          path: |
            ${{ inputs.workingDirectory }}
            !${{ inputs.workingDirectory }}/.*
            !${{ inputs.workingDirectory }}/**/.*
          retention-days: 7
          if-no-files-found: error
