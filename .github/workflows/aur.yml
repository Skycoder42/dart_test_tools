on:
  workflow_call:
    inputs:
      createAurUpdate:
        type: boolean
        required: true
        description: A boolean indicating whether the AUR-Deploy step should run.
      repository:
        type: string
        required: false
        description: The repository to check out. Passed as "repository" to "actions/checkout".
    secrets:
      AUR_SSH_PRIVATE_KEY:
        required: true
        description: The ASCII armored private SSH key to use to push changes to the AUR. The corresponding public key must have been added at https://aur.archlinux.org/ under "My Account".
jobs:
  aur_deploy:
    name: Deploy to AUR
    if: inputs.createAurUpdate
    runs-on: ubuntu-latest
    container: archlinux:base-devel
    steps:
      - name: Install pacman dependencies
        run: pacman -Sy --noconfirm git openssh go-yq pacman-contrib dart namcap
      - name: Install dart_test_tools
        run: dart pub global activate dart_test_tools ^4.2.0
      - name: Create build user
        run: |
          set -eo pipefail
          useradd -m build
          echo 'build ALL=(ALL:ALL) NOPASSWD: ALL' >> /etc/sudoers
      - name: Checkout repository ${{ inputs.repository }}
        uses: actions/checkout@v2
        with:
          repository: ${{ inputs.repository }}
          path: src
      - name: Setup git author
        run: |
          set -eo pipefail
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Ensure SSH configuration directory exists
        run: mkdir -p /etc/ssh
      - name: Setup known host keys
        run: |-
          set -eo pipefail
          echo 'aur.archlinux.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEuBKrPzbawxA/k2g6NcyV5jmqwJ2s+zpgZGZ7tpLIcN' >> /etc/ssh/ssh_known_hosts
          echo 'aur.archlinux.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBLMiLrP8pVi5BFX2i3vepSUnpedeiewE5XptnUnau+ZoeUOPkpoCgZZuYfpaIQfhhJJI5qgnjJmr4hyJbe/zxow=' >> /etc/ssh/ssh_known_hosts
          echo 'aur.archlinux.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDKF9vAFWdgm9Bi8uc+tYRBmXASBb5cB5iZsB7LOWWFeBrLp3r14w0/9S2vozjgqY5sJLDPONWoTTaVTbhe3vwO8CBKZTEt1AcWxuXNlRnk9FliR1/eNB9uz/7y1R0+c1Md+P98AJJSJWKN12nqIDIhjl2S1vOUvm7FNY43fU2knIhEbHybhwWeg+0wxpKwcAd/JeL5i92Uv03MYftOToUijd1pqyVFdJvQFhqD4v3M157jxS5FTOBrccAEjT+zYmFyD8WvKUa9vUclRddNllmBJdy4NyLB8SvVZULUPrP3QOlmzemeKracTlVOUG1wsDbxknF1BwSCU7CmU6UFP90kpWIyz66bP0bl67QAvlIc52Yix7pKJPbw85+zykvnfl2mdROsaT8p8R9nwCdFsBc9IiD0NhPEHcyHRwB8fokXTajk2QnGhL+zP5KnkmXnyQYOCUYo3EKMXIlVOVbPDgRYYT/XqvBuzq5S9rrU70KoI/S5lDnFfx/+lPLdtcnnEPk=' >> /etc/ssh/ssh_known_hosts
      - name: Import SSH private key
        run: |
          set -eo pipefail

          echo "${{ secrets.AUR_SSH_PRIVATE_KEY }}" >> "$RUNNER_TEMP/ssh-key"
          chmod 600 "$RUNNER_TEMP/ssh-key"

          echo "Host aur.archlinux.org" > /etc/ssh/ssh_config
          echo "  IdentityFile $RUNNER_TEMP/ssh-key" >> /etc/ssh/ssh_config
          echo "  User aur" >> /etc/ssh/ssh_config
      - name: Clone AUR repository
        run: git clone "ssh://aur@aur.archlinux.org/$(yq ".name" src/pubspec.yaml).git" ./aur
      - name: Generate PKGBUILD from dart package
        run: dart pub global run dart_test_tools:generate_pkgbuild --input src --output aur
      - name: Change ownership of AUR repo to the build user
        run: chown -R build:build aur
      - name: Update source checksums
        run: su build -c 'updpkgsums'
        working-directory: aur
      - name: Run namcap linter
        run: su build -c 'namcap -i PKGBUILD'
        working-directory: aur
      - name: Test if package can be build
        run: su build -c 'makepkg -sfC --check --noconfirm'
        working-directory: aur
      - name: Generate SRCINFO
        run: su build -c 'makepkg --printsrcinfo > .SRCINFO'
        working-directory: aur
      - name: Change ownership of AUR repo back to the root user
        run: chown -R root:root aur
      - name: Stage package files
        run: git add PKGBUILD CHANGELOG.md .SRCINFO
        working-directory: aur
      - name: Create update commit
        run: git commit -m "Update $(yq ".name" ../src/pubspec.yaml) to version $(yq ".version" ../src/pubspec.yaml)"
        working-directory: aur
      - name: Push update to AUR
        run: git push
        working-directory: aur
      - name: Clean up SSH key
        if: always()
        run: shred -fzvu "$RUNNER_TEMP/ssh-key"
