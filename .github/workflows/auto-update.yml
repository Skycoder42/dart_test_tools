on:
  workflow_call:
    inputs:
      flutterSdkChannel:
        type: string
        required: false
        default: stable
        description: The Flutter-SDK channel. Passed as "channel" to "subosito/flutter-action".
      workingDirectory:
        type: string
        required: false
        default: .
        description: The root directory of the dart package to build and test.
    secrets:
      githubToken:
        required: true
        description: The personal access token to create new releases with. Is required, as the default github workflow token does not trigger workflows when creating releases.
jobs:
  check-update-required:
    name: Check if updates are required
    outputs:
      needs_update: ${{ steps.check_auto_update.outputs.needs_update }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Flutter-SDK (${{ inputs.flutterSdkChannel }})
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ inputs.flutterSdkChannel }}
          cache: true
      - name: Download flutter binary artifacts
        run: flutter precache --universal
      - name: Install dart_test_tools
        run: dart pub global activate dart_test_tools ^6.1.3-pre.6
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0
      - name: Restore dart packages
        run: flutter pub get
        working-directory: ${{ inputs.workingDirectory }}
      - id: check_auto_update
        name: Check if updates are needed
        run: flutter pub global run dart_test_tools:auto_update --mode check --target '${{ inputs.workingDirectory }}'
  auto-update:
    name: Automatic dependency updates
    needs:
      - check-update-required
    if: needs.check-update-required.outputs.needs_update == 'true'
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Install Flutter-SDK (${{ inputs.flutterSdkChannel }})
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ inputs.flutterSdkChannel }}
          cache: true
      - name: Download flutter binary artifacts
        run: flutter precache --universal
      - name: Install scoop
        if: runner.os == 'Windows'
        run: |
          iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
          Join-Path (Resolve-Path ~).Path "scoop\shims" >> $Env:GITHUB_PATH
        shell: pwsh
      - name: Install yq (Windows)
        if: runner.os == 'Windows'
        run: scoop install yq
      - name: Install yq and coreutils (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install yq coreutils
          echo "$(brew --prefix)/opt/coreutils/libexec/gnubin" >> $GITHUB_PATH
      - name: Install dart_test_tools
        run: dart pub global activate dart_test_tools ^6.1.3-pre.6
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0
      - name: Restore dart packages
        run: flutter pub get
        working-directory: ${{ inputs.workingDirectory }}
      - name: Update dependencies
        run: flutter pub global run dart_test_tools:auto_update --mode update --target '${{ inputs.workingDirectory }}' --bump-version --report '${{ runner.temp }}/update_log.md'
      - id: create-pull-request
        name: Create pull request
        uses: peter-evans/create-pull-request@v7
        with:
          branch: automatic-dependency-updates
          delete-branch: true
          commit-message: Automatic dependency updates
          title: Automatic dependency updates
          body-path: ${{ runner.temp }}/update_log.md
          assignees: ${{ github.repository_owner }}
          token: ${{ secrets.githubToken }}
      - name: Mention assignees
        uses: thollander/actions-comment-pull-request@v3
        with:
          pr-number: ${{ steps.create-pull-request.outputs.pull-request-number }}
          message: Your review has been requested @${{ github.repository_owner }}
